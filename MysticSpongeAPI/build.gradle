// Gradle dependencies
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = 'oss-sonatype-public'
            url = 'https://oss.sonatype.org/content/repositories/public/'
        }
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven/'
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
        maven {
            name = 'gradle-plugins'
            url = 'https://plugins.gradle.org/m2'
        }
    }
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.0'
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0'
    }
}

// Plugins
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'license'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'signing'

defaultTasks 'clean', 'licenseFormat', 'check', 'build'

group 'com.gabizou.mysticsponge'
archivesBaseName = 'MysticSpongeAPI'
version '0.0.1-SNAPSHOT'

// Minimum version of Java required
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Project dependencies
repositories {
    mavenCentral()
    maven {
        url "https://repo.spongepowered.org/maven/"
    }
}

dependencies {
    compile 'org.spongepowered:spongeapi:6.0.0'
}

// Generates javadoc.jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
    javadoc.options.links("http://docs.guava-libraries.googlecode.com/git-history/v17.0/javadoc/",
                          "https://jd.spongepowered.org/",
                          "https://docs.oracle.com/javase/8/docs/api/")
}
// Generates sources.jar
task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

ext {
    projectName = 'MysticSpongeAPI'
    inceptionYear = '2017'
    packaging = 'jar'
    url = 'https://gabizou.com/'
    description = "API bridge for interfacing with Mysticraft for plugins written with SpongeAPI"
    organization = 'gabizou'
    pomFile = file("${project.projectDir}/pom.xml")
    buildNumber = project.hasProperty("buildNumber") ? buildNumber : '0'
    ciSystem = project.hasProperty("ciSystem") ? ciSystem : 'unknown'
    commit = project.hasProperty("commit") ? commit : 'unknown'
}

configurations {
    pom
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    required {
        gradle.taskGraph.hasTask("uploadArchives")
    }
    sign configurations.archives
}

processResources {
    from 'LICENSE'
}

license {
    ext.name = project.name
    ext.organization = project.organization
    ext.url = project.url
    ext.year = project.inceptionYear
    exclude "**/*.info"
    exclude "assets/**"
    header file("HEADER.txt")
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}


jar {
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": version + "+" + ciSystem + "-b" + buildNumber + ".git-" + commit,
                "Built-By": System.properties['user.name'],
                "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
                "Implementation-Vendor": url
        )
    }
    from ("${projectDir}") {
        include('LICENSE.txt', 'README.md')
    }
}

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'utf8'
}